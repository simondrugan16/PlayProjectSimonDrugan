<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Simons-MBP" name="services.ApplicationControllerUnitSpec" tests="14" errors="0" failures="0" skipped="0" time="0.021" timestamp="2023-03-16T12:00:24">
                     <properties>
      <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/><property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk@11/11.0.18/libexec/openjdk.jdk/Contents/Home/lib"/><property name="sun.java.command" value="/opt/homebrew/Cellar/sbt/1.8.2/libexec/bin/sbt-launch.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2023-01-17"/><property name="java.home" value="/opt/homebrew/Cellar/openjdk@11/11.0.18/libexec/openjdk.jdk/Contents/Home"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.18+0"/><property name="user.name" value="simon.drugan"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="java.vendor.version" value="Homebrew"/><property name="java.io.tmpdir" value="/var/folders/4b/vlqfgcsx2hx8b4wg1whfzv1c0000gn/T/"/><property name="java.version" value="11.0.18"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/Users/simon.drugan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="Homebrew"/><property name="scala.ext.dirs" value="/Users/simon.drugan/.sbt/1.0/java9-rt-ext-homebrew_11_0_18"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="gopherProxySet" value="false"/><property name="java.class.path" value="/opt/homebrew/Cellar/sbt/1.8.2/libexec/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Homebrew"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/London"/><property name="os.name" value="Mac OS X"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="GB"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/Users/simon.drugan"/><property name="user.language" value="en"/><property name="sbt.script" value="/opt/homebrew/Cellar/sbt/1.8.2/libexec/bin/sbt"/><property name="swoval.tmpdir" value="/Users/simon.drugan/.sbt/1.0"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="path.separator" value=":"/><property name="os.version" value="13.1"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/><property name="user.dir" value="/Users/simon.drugan/Documents/ScalaWorkplace/PlayProjectSimonDrugan/play-template"/><property name="os.arch" value="aarch64"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="11.0.18+0"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .index() should return a seq of books" time="0.004">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .index() should return an error when a sequence of books cannot be returned" time="0.001">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .create should create a book in the database" time="0.002">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .create should return an internal server error when books cannot be created" time="0.001">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .read should read a book in the database by id" time="0.002">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .read should throw an bad request when given an empty string" time="0.001">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .readByTitle should read a book in the database by title" time="0.001">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .readByTitle should throw an bad request when given an empty string title" time="0.001">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .update(id: String) should update a book in the database by id and data model" time="0.003">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .update(id: String) should throw an internal server error when given a body with the incorrect format" time="0.002">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .updateByFieldAndUpdate(id: String, field: String, update: String) should update a book in the database by id, a field to update, and the update itself" time="0.001">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .updateByFieldAndUpdate(id: String, field: String, update: String) should throw an BadRequest when given an empty id, field, or update" time="0.0">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .delete(id: String) should delete a book in the database given its id" time="0.001">
                                                 
                                               </testcase><testcase classname="services.ApplicationControllerUnitSpec" name="ApplicationController .delete(id: String) should throw an BadRequest when .delete is given an empty Book ID string" time="0.001">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>